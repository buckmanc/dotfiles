[user]
	# These values are set in ~/.gitconfig_local
[include]
	path = ~/.gitconfig_local
[mailmap]
	file = ~/.mailmap
[alias]
	# word diff
	wdiff=diff --color-words='\\w+|.' --ignore-cr-at-eol
	# letter diff
	ldiff=diff --color-words='.' --ignore-cr-at-eol
	dbdiff=wdiff --ignore-matching-lines='^USE \\[\\w+\\]$'
	# short stat
	stat=status -s
	statu=status -s
	# comm=!git diff --check && git commit
	# diff check and dotnet test before committing
	comm=!"~/bin/commitcheck && git commit"
	undo-commit=reset HEAD~
	list-alias=!git config -l | grep alias | cut -c 7-
	# word diff log
	wlog=log --patch --color-words='\\w+|.'
	xgrep=!git --no-pager grep -in
	xtree=!git ls-files | grep -i --color
	# pretty log
	plog=log --abbrev-commit --date-order --format=format:'%C(bold blue)%>|(21)%h%C(reset) %C(bold green)(%as)%C(reset) %C(white)%<(60,trunc)%s%C(reset) %C(dim white)- %aN%C(reset)%C(auto)%d%C(reset)' --decorate --graph --all
	# one line log
	olog=log --abbrev-commit --date-order --format=format:'%C(bold blue)%h%C(reset) %C(bold green)(%as)%C(reset) %C(white)%<(49,trunc)%s%C(reset) %C(dim white)- %aN%C(reset)%C(auto)%+d%C(reset)'
	dumpchanges=!git clean -fd && git checkout .
	track-all-branches=!~/bin/track-all-branches
	diff-all-branches=!~/bin/diff-all-branches
	pullall="!f() { \
		test -z \"$(git status --porcelain)\" || { echo 'Uncommitted changes!' && exit 1; };\
		currentbranch=$(git branch | grep \\* | cut -c 3-);\
		for remote in `git branch | cut -c 3-`;\
			do git checkout $remote && git pull --ff-only 2>&1 | grep -ivP 'warning.+?----' | grep -ivP 'warning.+?https conn' | grep -ivP 'warning.+?tls cert';\
		done;\
		git checkout $currentbranch;\
		}; f;"
	# allows for neat tricks like cd `git root`
	root=rev-parse --show-toplevel
	fixcarriagereturn=!git ls-files --eol | grep -Pi 'w/(mixed|crlf)' | grep -Pio '(?<=\\s{4}\\S.+' | xargs perl -i -pe 's/\\r//g'
	fixtw=!git ls-files | xargs -d '\n' sed -i 's/[ \t]*\\(\\r\\?\\)$/\\1/'
	# TODO dedangle= git fsck | xgrep dangle, git prune, git gc
[core]
	editor = vim
	autocrlf = input # only check in lf, check out whatever's in the index
	pager = tr -d '\\r' | less -REX # visually strip CR's
	#attributesfile = ~/.gitattributes # working, but gitignore filter causes one hell of a slowdown in certain environments
[interactive]
	singleKey = true
[push]
	autoSetupRemote = true
[gc]
	auto = 256
[init]
	defaultBranch = main
[status]
	renames = copies
[filter "notepad++ignore"]
	clean = ~/.config/Notepad++/git_clean_filter.sh
[filter "gitignore"]
	clean = "sed -b '/#gitignore$/d'"
[filter "starship"]
	# standardize nerdfont moon glyphs and support #gitignore
	clean = "sed -b -e 's/[]//g' -e '/#gitignore$/d'"
[filter "xml"]
	# deterministic xml sorting
	# specifically for visual studios and ssms that shuffle their arrays
	# winget install jqlang.jq && pip install yq
	# note that strings are case sensitive
	clean = "xq -x -S 'walk(if type == \"array\" then sort_by(.\"@name\", .\"@Name\", .\"@GUID\") else . end)'"
[filter "json"]
	clean = "jq -S 'walk(if type == \"array\" then sort_by(.) else . end)'"
[filter "sort"]
	# clean = "sort -u"
	clean = "~/bin/PADS"
[help]
	autocorrect = 50
[diff]
	wsErrorHighlight = all
[diff "image"]
	textconv = ~/bin/image-diff
