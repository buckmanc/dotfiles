format = """
$sudo\
$username\
$hostname \
$directory\
$dotnet\
$custom\
$git_branch\
$git_commit\
$git_state\
$git_status\
$git_metrics\
$cmd_duration\
$line_break\
$character\
"""

continuation_prompt = '[❯ ](white)' # not working; what's wrong here?

[sudo]
format = '[$symbol]($style)'
style = 'green'
symbol = 'sudo'
disabled = false

[username]
format = '[$user]($style)'
style_user = "green"
style_root = "bright-red"
disabled = true

[hostname]
style = "green"
format = "[@$hostname]($style)"
ssh_only = false
disabled = false

[directory]
style = "green"
read_only_style = "green"
read_only = " "
home_symbol = "ᐰ " # space solves a glyph clipping issue ...sometimes
truncate_to_repo = false
truncation_length = 3
truncation_symbol = '../'

[directory.substitutions]
"Spotify"	= ""
"config"	= ""
"Dropbox"	= ""
"Documents"	= ""
"Downloads"	= ""
"Uploads"	= ""
"Music"		= ""
"Pictures"	= ""
"Videos"	= ""
"Sounds"	= ""
"Backups"	= ""
"Backup"	= ""
"Minecraft"	= ""
"Notes"		= ""
"to do"		= "✓"
"media"		= ""
"content"	= ""
"Playlists"	= ""
"sql"		= ""
"SQL"		= ""
"Coding"	= ""
"Scripts"	= "#!"
"Books"		= ""
"Windows"	= ""

[dotnet]
format = '[($tfm )]($style)'

[custom.shellscripts]
# if it's the home dir and bash, backspace over the symbol
# this way you still get the symbol in other shells
symbol = "#!"
command = '''if [ "${HOME,,}" == "${PWD,,}" ]; then printf '\u0008\u0008\u0008'; fi'''
detect_extensions = ['sh']
style = "bold blue"
description = "A symbol indicating if shell scripts are present."

[custom.python]
symbol = "🐍"
command = '''if [ "${HOME,,}" == "${PWD,,}" ]; then printf '\u0008\u0008\u0008'; fi'''
detect_extensions = ["py"]
style = "bold blue"
description = "A symbol indicating if python scripts are present."

[custom.sql]
symbol = ""
detect_extensions = ["sql"]
style = "bold blue"
description = "A symbol indicating if SQL files are present."

[character]
success_symbol = "[留❯](white)"
error_symbol   = "[六❯](red)"
vimcmd_symbol  = "[留❯](white)"

[git_branch]
format = "[\\($symbol$branch(:$remote_branch)\\)]($style)"
style = "white"

# this is only the backup for git_branch in a detached head state
[git_commit]
format = "[\\( $hash$tag\\)]($style)"
style = "white"

[git_status]
format = "[($conflicted$ahead_behind$stashed$staged)[(*$untracked$modified$renamed$deleted)]()]($style)"
style = "white"
untracked	= "​"
modified	= "​"
renamed		= "​"
deleted		= "​"
stashed		= "≡"
#conflicted	= "ﲅ"
#conflicted	= "󰞇"
conflicted	= "理"

[git_state]
style = "white"

[git_metrics]
added_style = "white dimmed"
deleted_style = "white dimmed"
format = '( [+$added]($added_style))( [-$deleted]($deleted_style))'
disabled = true

[cmd_duration]
format = "[ $duration]($style)"
style = "white dimmed"
