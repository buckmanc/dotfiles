# default notes are double commented
# config for this model:
# https://www.amazon.com/dp/B0C6PHV9HF/

# bluetooth
# toggle switch on top controls bluetooth
# left is off, right is on
# if not paired it automatically goes to pairing mode
# high function keys (F13-F24) work via usb but not via bluetooth

## Normal keyboard orientation is when
## buttons are on the left side and knobs are on the right.
## However, you may want to use the keyboard in another orientation.
## To avoid remapping button positions in your head, just set it here.
## Possible values are:
##   (horizontal)
##   - 'normal': buttons on the left, knobs on the right
##   - 'upsidedown': buttons on the right, knobs on the left
##   (vertical)
##   - 'clockwise': buttons on the top, knobs on the bottom
##   - 'counterclockwise': buttons on the bottom, knobs on the top
orientation: normal

## Different keyboard models have different numbers of buttons and knobs.
## Set it here for proper handling.
## Count rows and columns with the keyboard in normal orientation (knobs on the right)
rows: 3
columns: 4
knobs: 2

## Layers are sets of alternative key mappings.
## The current layer is changed using a button on the side of the keyboard
## and displayed with LEDs on top (only for the moment of changing).
## All keyboards I saw had three layers, but I suppose other variants exist.

## Array of buttons.
## In horizontal orientations it's `rows` rows `columns` buttons each.
## In vertical: `columns` rows `rows` buttons each.
## Each entry is either a sequence of 'chords' or a mouse event.
## A chord is a combination of one key with optional modifiers,
## like 'b', 'ctrl-alt-a' or 'win-rctrl-backspace'.
## It can also be just modifiers without a key: 'ctrl-alt'.
## You may combine up to 5 chords into a sequence using commas: 'ctrl-v,ctrl-c'.
## Arbitrary HID usage codes (decimal) may be given like this: '<101>'.
## See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf (section 10)
## for HID usage code list.
## Mouse events are clicks ('click/lclick', 'rclick', 'mclick') or
## wheel events ('wheelup', 'wheeldown') with one optional modifier,
## only 'ctrl', 'shift' and 'alt' are supported ('ctrl-wheeldown').
## Clicks may combine several buttons, like this: 'click+rclick'.
## Multimedia commands are supported but
## cannot be mixed with normal keys and modifiers.

## Knobs are listed from left to right if horizontal.
## Knobs are listed from top to bottom if vertical.
## Knobs can be rotated counter-clockwise (ccw) or clockwise (cw)
## and pressed down.

# win-alt-k is a windows mic mute shortcut
# unfort only msteams is supported by default
# TODO see if you can map this in discord

layers:
  # layer 1: macros and play controls
  - buttons:
      - ["play", "prev", "next", "win-alt-k"]
      - ["win-l", "ctrl-shift-g", "win-alt-F5", "mute"]
      - ["win-alt-F1", "win-alt-F2", "win-alt-F3", "win-alt-F4"]
    knobs:
      - ccw: "volumedown"
        press: "mute"
        cw: "volumeup"
      - ccw: "wheeldown"
        press: "escape"
        cw: "wheelup"

  # layer 2: same but with different knobs
  - buttons:
      - ["play", "prev", "next", "win-alt-k"]
      - ["win-l", "ctrl-shift-g", "win-alt-F5", "mute"]
      - ["win-alt-F1", "win-alt-F2", "win-alt-F3", "win-alt-F4"]
    knobs:
      - ccw: "ctrl-shift-tab"
        press: "escape"
        cw: "ctrl-tab"
      - ccw: "wheeldown"
        press: "escape"
        cw: "wheelup"

  # vim
  # row 1: yank/paste with register a, undo/redo
  # row 3: spell check
  - buttons:
      - ["shift-quote,a,p", "escape,u", "escape,ctrl-r", "shift-quote,a,y"]
      - ["escape", "escape", "escape", "escape"]
      - ["escape,1,z,equal", "escape,leftbracket,s", "escape,rightbracket,s", "escape,z,g"]
    knobs:
      - ccw: "volumedown"
        press: "mute"
        cw: "volumeup"
      - ccw: "wheeldown"
        press: "z"
        cw: "wheelup"
