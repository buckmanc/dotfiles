#!/usr/bin/env bash

set -e

domain="$(echo "$1" | grep -iPo '(https?://)(www\\.)?[^/]+' | perl -pe 's/^(https?:\/\/|www\.)+//g;' -e 's/(:\d+)$//g;' )" || true

msg=$'Which log?\n1\trotate\n2\tdelete\n3\tscreenshots\n'
outDir="$HOME/linklogs"
rotateLeftLog="$outDir/rotate-left.log"
rotateRightLog="$outDir/rotate-right.log"
rotate180Log="$outDir/rotate-180.log"
deleteLog="$outDir/delete.log"
screenshotLog="$outDir/screenshots.log"
input="$*"

if [[ "$domain" == "herschel.local" || "$domain" == *"buckman.cc" ]]
then
	fileName="$(basename "$input")"
	echo "$fileName"
	echo

	read -p "$msg" -n 1 -r
	mkdir -p "$outDir"
	if [[ $REPLY =~ ^[\-1]$ ]]
	then
		echo
		msg=$'Which rotate?\n1\tleft\n2\tright\n3\t180\n'
		read -p "$msg" -n 1 -r
		if [[ $REPLY =~ ^[\-1]$ ]]
		then
			echo "$input" >> "$rotateLeftLog"
		elif [[ $REPLY =~ ^[\|2]$ ]]
		then
			echo "$input" >> "$rotateRightLog"
		elif [[ $REPLY =~ ^[3]$ ]]
		then
			echo "$input" >> "$rotate180Log"
		elif [[ $REPLY =~ ^[q]$ ]]
		then
			exit
		else
			echo "i don't know what $REPLY means"
			sleep 5s
			exit 1
		fi
	elif [[ $REPLY =~ ^[\|2]$ ]]
	then
		echo "$input" >> "$deleteLog"
	elif [[ $REPLY =~ ^[3]$ ]]
	then
		echo "$input" >> "$screenshotLog"
	elif [[ $REPLY =~ ^[q]$ ]]
	then
		exit
	else
		echo "i don't know what $REPLY means"
		sleep 5s
		exit 1
	fi
# if you provided a url
elif [[ -n "$domain" ]]
then
	outDir="$HOME/storage/downloads/$domain"
	mkdir -p "$outDir"

	# TODO log what files are already in the folder so new files can be sanitized

	if echo "$domain" | grep -Piq '(youtube|youtu\.be|tiktok)'
	then
		# exec bash
		export PATH="$PATH:/data/data/com.termux/files/usr/bin"
		export PATH="$PATH:$HOME/.local/bin"
		"$HOME/.local/bin/yt-dlp" --paths home:"$outDir" "$1"
	elif echo "$1" | grep -iq "teeturtle.com"
	then
		$HOME/bin/download-teeturtle "$1" "$outDir"
	# download big teeturtle images
	elif echo "$1" | grep -iq "threadless.com"
	then
		$HOME/bin/download-threadless "$1" "$outDir"
	# download astrobin
	elif echo "$1" | grep -iq "astrobin.com"
	then
		$HOME/bin/download-astrobin "$1" "$outDir"
	elif echo "$domain" | grep -Piq "wp.com$" && echo "$1" | grep -iq "gamechops"
	then
		modUrl2="$(echo "$1" | perl -pe "s/(-scaled|\?.+$)//g")"
		modUrl1="$(echo "$modUrl2" | perl -pe "s/3000x3000-//g")"
		outDir="$(echo "$outDir" | perl -pe "s/[^\.\/\\\\]+\.wp.com/GameChops/g")"
		mkdir -p "$outDir"

		# echo "modUrl: $modUrl"
		# echo "outDir: $outDir"

		curl -O "$modUrl1" --output-dir "$outDir"
		curl -O "$modUrl2" --output-dir "$outDir"
	# download images off this unknown page
	else
		if ! "$HOME/bin/xgallery-dl" -d "$outDir" "$1"
		then
			echo "Could not download with gallery-dl. Falling back to generic downloader."
			$HOME/bin/download-page-images "$1" "$outDir"
		fi
	fi

	termux-media-scan "$outDir"
else
	error="I have no idea what this is."
	echo "$error"
	termux-toast "$error"
	exit 1
fi

