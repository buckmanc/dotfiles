#!/usr/bin/env bash

# clear the screen
# echo -n "[2J[;H"

isMotd=0
if [[ -z "$USERNAME" && -z "$USER" && "$OSTYPE" != "linux-android" ]]
then
	isMotd=1
fi

# default logo type/position
if [[ "$OSTYPE" == "linux-android" ]]
then
	logoPad=5
else
	logoPad=8
fi
logoArgs="--logo-type small --logo-position top --logo-padding-left $logoPad"

# no column method is working under motd
columns=$(tput cols)
if [[ -z "$columns" || "$columns" -le 0 ]]
then
	columns="$COLUMNS"
fi

if [[ -n "$columns" ]] && [[ "$columns" -gt 0 ]]
then
	if [[ "$columns" -lt 40 ]]
	then
		# do nothing, leave the default
		:
	elif [[ "$columns" -lt 80 ]]
	then
		# logoArgs="--logo-type small"
		# do nothing, leave the default
		:
	else
		# reset to big, left logo
		logoArgs=""
	fi
fi

# effective --color=always
# fix excess newlines on the logo
# shorten storage abbreviations
output="$(\
fastfetch --pipe false $logoArgs "$@" | \
	perl -00pe 's/\n{3,}/\n\n/g' | \
	perl -pe 's/([PTGMK])iB/$1/g' \
)"

# separate and remove the disk lines so they can be formatted
diskLines="$(echo "$output" | grep -Pi ' / .+\d%')"
output="$(echo "$output" | grep -Piv ' / .+\d%')"

# turn the disk lines into columns
diskLines="$(echo "$diskLines" | perl -pe 's| / |@|g' | column -t -s '@' -o ' / ' | perl -pe 's/ \(/@/g' | column -t -s '@' -o ' (' | perl -pe 's/( )([^ ]+ [PTGMB]i?B?)( {2,})/$3$2$1/g')"

# for some reason column under motd is changing nerdfont symbols to escape sequences
# thus a need to transform them back
if [[ "$isMotd" == "1" ]]
then
	diskLines="$(echo -e "$diskLines")"
fi

# append disk columns
output="$output"$'\n'"$diskLines"

printf "%s" "$output"

# spit out a new line if unlikely to be running as an motd
if [[ "$isMotd" == "0" ]]
then
	echo
fi
