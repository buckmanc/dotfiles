#!/usr/bin/env bash

set -e

if [[ "$#" -lt 1 ]]
then
	echo "need at least one file path"
	exit 1
fi

# use a package to parse the output if available
if type ffmpeg-progress-yield > /dev/null 2>&1
then
	progress="ffmpeg-progress-yield"
else
	progress=""
fi

# lower crf number is high quality
# requires experimentation to find "visual losslessnes"
crf=25
codec=H264
preset=slower
testTimeStamp="0:07"
optTest=0

makeTestImage(){
	testSource="$1"
	testDest="$2"

	if [[ "$optTest" == 1 ]]
	then
		ffmpeg -i "$testSource" -ss "$testTimeStamp" -vframes 1 -y -loglevel error "$testDest"
	fi
}

for src in "$@"
do
	pathNoExt="${src%.*}"
	pathNoExtTrim="${pathNoExt% - Raw}"
	destPathNoExt="$pathNoExtTrim - $codec CRF $crf"
	destPath="$destPathNoExt.mp4"

	testPathSource="$pathNoExt.png"
	testPathDest="$destPathNoExt.png"

	if [[ -f "$destPath" ]]
	then
		continue
	fi

	if [[ "${codec^^}" == "H264" ]]
	then
		"$progress" ffmpeg -hide_banner -i "$src" -vcodec libx264 -crf "$crf" -vf yadif=1 -c:a aac -preset "$preset" "$destPath"
	elif [[ "${codec^^}" == "H265" ]]
	then
		"$progress" ffmpeg -hide_banner -i "$src" -vcodec libx265 -crf "$crf"-tag:v hvc1 -vf yadif=1 -c:a aac -preset "$preset" "$destPath"
	else
		echo "unknown codec"
		exit 1
	fi

	# write a couple test images to compare quality
	if [[ ! -f "$testPathSource" ]]
	then
		makeTestImage "$src" "$testPathSource"
	fi

	rm -rf "$testPathDest"
	makeTestImage "$destPath" "$testPathDest"

done

