#!/usr/bin/env bash

aspectRatio=""
optLandscape=0
optPortrait=0
optBlur=0
optVerbose=0

for arg in "$@"
do
	if [[ "${arg,,}" == "--landscape" || "${arg,,}" == "-l" ]]
	then
		aspectRatio="16/9"
		optLandscape=1
	elif [[ "${arg,,}" == "--portrait" || "${arg,,}" == "-p" ]]
	then
		aspectRatio="20/9"
		optPortrait=1
	elif [[ "${arg,,}" == "--blur" || "${arg,,}" == "-b" ]]
	then
		optBlur=1
	elif [[ "${arg,,}" == "--verbose" || "${arg,,}" == "-v" ]]
	then
		optVerbose=1
	elif echo "$arg" | grep -Piq '^-'
	then
		echo "unknown option: $arg"
		exit 1
	elif [[ -z "$inPath" ]]
	then
		# assume it's a path
		inPath="$arg"
	elif [[ -z "$outPath" ]]
	then
		# assume it's a path
		outPath="$arg"
	else
		echo "unknown option: $arg"
		exit 1
	fi
done
	
if [[ -z "$inPath" ]]
then
	echo "need source image path"
	exit 1
elif [[ -z "$outPath" ]]
then
	echo "need destination image path"
	exit 1
fi

# TODO add --aspect-ratio
# then determine portrait or landscape from that
# low priority
if [[ -z "$aspectRatio" ]]
then
	echo "specify --landscape or --portrait"
	exit 1
fi

bgColor="$(convert "$inPath" -format "%[pixel:p{0,0}]" info:)"
colorProfile="$(identify -format '%r' "$inPath")"
width="$(identify -format '%w' "$inPath")"
height="$(identify -format '%h' "$inPath")"

if [[ "$optVerbose" == 1 ]]
then
	echo "   file: $(basename "$inPath")"
	echo " colors: $colorProfile"
	echo "bgColor: $bgColor"
	echo "  input: ${width}x${height}"
fi

if [[ "$optLandscape" == 1 ]]
then
	targetHeight="$height"
	targetWidth=$(echo "${targetHeight}*(${aspectRatio})" | bc -l)
	targetWidth="${targetWidth%%.*}"
elif [[ "$optPortrait" == 1 ]]
then
	targetWidth="$width"
	targetHeight=$(echo "$targetWidth*($aspectRatio)" | bc -l)
	targetHeight="${targetHeight%%.*}"
fi

targetDimensions="${targetWidth}x${targetHeight}"
blurOutPath="${inPath%.*}_blur.${inPath##*.}"
bgOutPath="${inPath%.*}_background.${inPath##*.}"

if [[ "$optVerbose" == 1 ]]
then
	echo " output: $targetDimensions"
fi

convert -background none -size "$targetDimensions" "xc:$bgColor" "${bgOutPath}"

if [[ "$optBlur" == 1 ]]
then
	convert "$inPath" -background none -resize 250% -blur 0x25 -modulate 30 -gravity center -extent "$targetDimensions" "$blurOutPath"

	# final output
	convert -background none -gravity center "$bgOutPath" "$blurOutPath" -composite "$inPath" -composite "$outPath"
else
	# final output
	convert -gravity center "$bgOutPath" "$inPath" -composite "$outPath"
fi 

colorProfileOut="$(identify -format '%r' "$outPath")"
if [[ "$optVerbose" == 1 ]]
then
	echo " colors: $colorProfileOut"
fi

rm -f "$bgOutPath"
rm -f "$blurOutPath"

if [[ "${colorProfile,,}" != *"gray"* && "${colorProfileOut,,}" == *"gray"* ]]
then
	echo "image magick grayscale bug detected!"
	echo "changing your output to a png should fix this"
	exit 1
fi
