#!/usr/bin/env bash

if [[ "$OSTYPE" = "linux-android" ]]
then
	# android apps need these files to be in a public, non . directory
	cacheDir="$(realpath "$HOME/storage/shared/Music/play-dungeon-synth/")"
else
	cacheDir="$HOME/.cache/play-dungeon-synth"
fi

maxFiles=10
maxFilesPlusOne=$((maxFiles+1))
# calc an absolute index for the filename
# brakes with many other args
# outputFormat="%(playlist_count+1-playlist_index)0d_%(title)s"
outputFormat="%(upload_date)s_%(title)s"
playlistPath="$cacheDir/Dungeon Synth Archives.m3u"

mkdir -p "$cacheDir"

if [[ "$OSTYPE" = "linux-android" && ! "$HOME/bin_termux/termux-on-wifi" ]]
then
	echo "skipping download on mobile data"
else
	# download the x most recent videos
	yt-dlp 'https://www.youtube.com/@TheDungeonSynthArchives/videos' --extract-audio --embed-metadata --embed-thumbnail --audio-format "mp3" --audio-quality 1 --output "$cacheDir/$outputFormat.%(ext)s" --playlist-items "1:$maxFiles" --download-archive "$cacheDir/archive.log" --max-downloads "$maxFiles" --restrict-filenames --no-overwrites --print "$outputFormat" --no-simulate --no-warnings
fi

# remove files beyond the max
ls -t "$cacheDir/"*.mp3 | tail -n +"$maxFilesPlusOne" | xargs --delimiter '\n' --no-run-if-empty rm

# build the playlist in descending order
files="$(find "$cacheDir" -type f -iname '*.mp3' | sort -r)"
if type cygpath > /dev/null 2>&1 && [[ "$OSTYPE" = "msys" ]]
then
	files="$(echo "$files" | xargs --delimiter $'\n' cygpath --windows)"
fi

if [[ -z "$files" ]]
then
	echo "no files found"
	exit 1
fi

echo "$files" > "$playlistPath"

# open with the default program
# recommended: vlc for win, aimp for android
"$HOME/bin/open" "$playlistPath"
