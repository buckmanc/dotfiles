#!/usr/bin/env bash

bluetoothctl power on

optLoop=0
optAllDeets=0
newRecords=0

for arg in "$@"
do
	if [[ "$arg" == "-l" || "$arg" == "--loop" ]]
	then
		optLoop=1
	elif [[ "$arg" == "-a" || "$arg" == "--all" ]]
	then
		optAllDeets=1
	fi
done

if [[ "$optLoop" == "0" ]]
then
	timeoutTime=30
else
	timeoutTime=99999
fi

macAddyRegex='([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})'

echo "scanning..."
while read -r line
do
	if [ "$line" == "Discovery started" ] || [[ "$line" == *"] Controller "* ]]
	then
		continue
	fi

	# strip control chars
	line=$(echo "$line" | ansi2txt | perl -pe 's/[\cA\cB]//g') 
	# event=$(echo "$line" | grep -Pio '^\[\w+?\] ' | perl -pe 's/[ \[\]]//g')
	deviceName=$(echo "$line" | perl -pe 's/^(\S+?) (\S+?) (\S+?) (.+)$/\4/g')
	macAddy=$(echo "$line" | grep -Pio "$macAddyRegex" | head -n 1)


	bInfo=$(bluetoothctl info "$macAddy")
	bName=$(echo "$bInfo" | grep -Pio '(?<=name: ).+?(?=     |$)')

	# use the name from bluetoothctl info if present
	if [[ -n "$bName" ]]
	then
		deviceName="$bName"
	fi

	if echo "$deviceName" | grep -Piq '(rssi|txpower): ' || echo "$deviceName" | grep -Piq "$macAddyRegex"
	then
		deviceName=''
	else
		# temp logging to assist in debugging
		"$HOME/bin/_log" "bluetooth-raw" "$line,$bName" > /dev/null
	fi

	logResult="$("$HOME/bin/_log" "bluetooth" "\"$deviceName\",$macAddy")"

	if [[ "$optAllDeets" == "1" ]]
	then
		echo "$line"
	else
		# eat nopers message, prefer to display at end
		if ! echo "$logResult" | grep -Piq "^no new"
		then
			echo "$logResult"
		fi
	fi

	if ! echo "$logResult" | grep -Piq "^no new"
	then
		newRecords=1
	fi

# timeout option is required for non interactive scanning
done < <( stdbuf -oL bluetoothctl --timeout "$timeoutTime" scan on )

if [[ "$newRecords" == "0" && "$optLoop" == "0" ]]
then
	echo "no new devices logged"
fi
