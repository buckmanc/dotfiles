#!/usr/bin/env bash

bluetoothctl power on

optLoop=0
optAllDeets=0
timeoutTime=30
timeoutTimePlus=$((timeoutTime+5))
newRecords=0

for arg in "$@"
do
	if [[ "$arg" == "-l" || "$arg" == "--loop" ]]
	then
		optLoop=1
	elif [[ "$arg" == "-a" || "$arg" == "--all" ]]
	then
		optAllDeets=1
	fi
done

start="$EPOCHSECONDS"

echo "scanning..."
while read -r line
do
	if [ "$line" == "Discovery started" ] || [[ "$line" == *"] Controller "* ]]
	then
		continue
	fi

	# strip control chars
	line=$(echo "$line" | ansi2txt | perl -pe 's/[\cA\cB]//g') 
	# event=$(echo "$line" | grep -Pio '^\[\w+?\] ' | perl -pe 's/[ \[\]]//g')
	# deviceName=$(echo "$line" | perl -pe 's/^(\S+?) (\S+?) (\S+?) (.+)$/\4/g')
	macAddy=$(echo "$line" | grep -Pio '([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})')


	bInfo=$(bluetoothctl info "$macAddy")
	bName=$(echo "$bInfo" | grep -Pio '(?<=name: ).+?(?=     |$)')

	# # only accept device name from the "new" event of the main scan
	# # otherwise, use the one nabbed from bluetoothctl info
	# if [ "$event" != "NEW" ]
	# then
	# 	deviceName="$bName"
	# fi

	# device name from bluetoothctl info seems more reliable than from the scan
	# "new" event *usually* has the name but sometimes has the mac address instead
	# logResult="$("$HOME/bin/_log" "bluetooth" "$deviceName,$macAddy")"
	logResult="$("$HOME/bin/_log" "bluetooth" "$bName,$macAddy")"

	if [[ "$optAllDeets" == "1" ]]
	then
		echo "$line"
	else
		# eat nopers message, prefer to display at end
		if ! echo "$logResult" | grep -Piq "^no new"
		then
			echo "$logResult"
		fi
	fi

	if ! echo "$logResult" | grep -Piq "^no new"
	then
		newRecords=1
	fi

	# scan until timeout unless told to loop
	# hopefully this hits more than the hard timeout
	if [[ "$optLoop" == "0" ]] && (( EPOCHSECONDS-start > timeoutTime ))
	then
		break
	fi

# read bluetooth scan one line at a time, with a hard timeout in case no lines are ever returned for the above timeout to hit
# using timeoutTimePlus to favor clean timeout over hard timeout
done < <( stdbuf -oL timeout --preserve-status "$timeoutTimePlus" bluetoothctl scan on )

if [[ "$newRecords" == "0" && "$optLoop" == "0" ]]
then
	echo "no new devices logged"
fi
